{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"A Replication of Karlan and List (2007)\"\n",
        "author: \"Xingyu Kuang\"\n",
        "date: today\n",
        "format: html\n",
        "callout-appearance: minimal # this hides the blue \"i\" icon on .callout-notes\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "## Introduction\n",
        "\n",
        "Dean Karlan at Yale and John List at the University of Chicago conducted a field experiment to test the effectiveness of different fundraising letters. They sent out 50,000 fundraising letters to potential donors, randomly assigning each letter to one of three treatments: a standard letter, a matching grant letter, or a challenge grant letter. They published the results of this experiment in the _American Economic Review_ in 2007. The article and supporting data are available from the [AEA website](https://www.aeaweb.org/articles?id=10.1257/aer.97.5.1774) and from Innovations for Poverty Action as part of [Harvard's Dataverse](https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/27853&version=4.2).\n",
        "\n",
        "The control group received a standard letter, while the treatment groups received letters offering matching grants with varying features. These included different match ratios (1:1, 2:1, and 3:1), varying maximum matching amounts ($25,000, $50,000, $100,000, or unspecified), and suggested donation levels tied to past giving. The study aimed to isolate whether the \"price\" of giving—lowered through matching—would increase donation likelihood or size. Results showed that simply including a matching grant significantly increased response rates and revenue per letter. However, larger match ratios offered no additional benefit. The experiment provided strong empirical insight into donor behavior and the psychology behind charitable decision-making.\n",
        "\n",
        "This project seeks to replicate their results.\n",
        "\n",
        "\n",
        "## Data\n",
        "\n",
        "### Description\n"
      ],
      "id": "c644bce8"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import pandas as pd\n",
        "\n",
        "df = pd.read_stata(\"karlan_list_2007.dta\")\n",
        "\n",
        "df.head()"
      ],
      "id": "6deb25f3",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "The dataset contains 50,083 observations and 51 variables from a natural field experiment on charitable giving. Each row represents a prior donor who received a fundraising letter with randomized treatments: a control letter or one of several matching grant variations. Key variables include match ratio (ratio), maximum match size (size), suggested donation amounts (ask), and donation behavior (gave, amount). Demographic and geographic data—like gender, income, urban status, and political affiliation—are also included. The dataset enables analysis of how different fundraising strategies affect donation likelihood and size, offering insights into behavioral economics and nonprofit fundraising effectiveness.\n",
        "\n",
        ":::: {.callout-note collapse=\"true\"}\n",
        "### Variable Definitions\n",
        "\n",
        "| Variable             | Description                                                         |\n",
        "|----------------------|---------------------------------------------------------------------|\n",
        "| `treatment`          | Treatment                                                           |\n",
        "| `control`            | Control                                                             |\n",
        "| `ratio`              | Match ratio                                                         |\n",
        "| `ratio2`             | 2:1 match ratio                                                     |\n",
        "| `ratio3`             | 3:1 match ratio                                                     |\n",
        "| `size`               | Match threshold                                                     |\n",
        "| `size25`             | \\$25,000 match threshold                                            |\n",
        "| `size50`             | \\$50,000 match threshold                                            |\n",
        "| `size100`            | \\$100,000 match threshold                                           |\n",
        "| `sizeno`             | Unstated match threshold                                            |\n",
        "| `ask`                | Suggested donation amount                                           |\n",
        "| `askd1`              | Suggested donation was highest previous contribution                |\n",
        "| `askd2`              | Suggested donation was 1.25 x highest previous contribution         |\n",
        "| `askd3`              | Suggested donation was 1.50 x highest previous contribution         |\n",
        "| `ask1`               | Highest previous contribution (for suggestion)                      |\n",
        "| `ask2`               | 1.25 x highest previous contribution (for suggestion)               |\n",
        "| `ask3`               | 1.50 x highest previous contribution (for suggestion)               |\n",
        "| `amount`             | Dollars given                                                       |\n",
        "| `gave`               | Gave anything                                                       |\n",
        "| `amountchange`       | Change in amount given                                              |\n",
        "| `hpa`                | Highest previous contribution                                       |\n",
        "| `ltmedmra`           | Small prior donor: last gift was less than median \\$35              |\n",
        "| `freq`               | Number of prior donations                                           |\n",
        "| `years`              | Number of years since initial donation                              |\n",
        "| `year5`              | At least 5 years since initial donation                             |\n",
        "| `mrm2`               | Number of months since last donation                                |\n",
        "| `dormant`            | Already donated in 2005                                             |\n",
        "| `female`             | Female                                                              |\n",
        "| `couple`             | Couple                                                              |\n",
        "| `state50one`         | State tag: 1 for one observation of each of 50 states; 0 otherwise  |\n",
        "| `nonlit`             | Nonlitigation                                                       |\n",
        "| `cases`              | Court cases from state in 2004-5 in which organization was involved |\n",
        "| `statecnt`           | Percent of sample from state                                        |\n",
        "| `stateresponse`      | Proportion of sample from the state who gave                        |\n",
        "| `stateresponset`     | Proportion of treated sample from the state who gave                |\n",
        "| `stateresponsec`     | Proportion of control sample from the state who gave                |\n",
        "| `stateresponsetminc` | stateresponset - stateresponsec                                     |\n",
        "| `perbush`            | State vote share for Bush                                           |\n",
        "| `close25`            | State vote share for Bush between 47.5% and 52.5%                   |\n",
        "| `red0`               | Red state                                                           |\n",
        "| `blue0`              | Blue state                                                          |\n",
        "| `redcty`             | Red county                                                          |\n",
        "| `bluecty`            | Blue county                                                         |\n",
        "| `pwhite`             | Proportion white within zip code                                    |\n",
        "| `pblack`             | Proportion black within zip code                                    |\n",
        "| `page18_39`          | Proportion age 18-39 within zip code                                |\n",
        "| `ave_hh_sz`          | Average household size within zip code                              |\n",
        "| `median_hhincome`    | Median household income within zip code                             |\n",
        "| `powner`             | Proportion house owner within zip code                              |\n",
        "| `psch_atlstba`       | Proportion who finished college within zip code                     |\n",
        "| `pop_propurban`      | Proportion of population urban within zip code                      |\n",
        "\n",
        "::::\n",
        "\n",
        "\n",
        "### Balance Test \n",
        "\n",
        "As an ad hoc test of the randomization mechanism, I provide a series of tests that compare aspects of the treatment and control groups to assess whether they are statistically significantly different from one another.\n"
      ],
      "id": "730366ae"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import numpy as np\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "def test_balance(variable: str):\n",
        "    # Drop missing values\n",
        "    treat = df[df['treatment'] == 1][variable].dropna()\n",
        "    ctrl = df[df['treatment'] == 0][variable].dropna()\n",
        "\n",
        "    X1, X2 = treat.mean(), ctrl.mean()\n",
        "    s1, s2 = treat.std(), ctrl.std()\n",
        "    n1, n2 = len(treat), len(ctrl)\n",
        "\n",
        "    # Manual t-statistic using class slide formula\n",
        "    t_stat_manual = (X1 - X2) / np.sqrt((s1**2)/n1 + (s2**2)/n2)\n",
        "\n",
        "    reg = smf.ols(f'{variable} ~ treatment', data=df[['treatment', variable]].dropna()).fit()\n",
        "    coef = reg.params['treatment']\n",
        "    t_stat_reg = reg.tvalues['treatment']\n",
        "    p_val = reg.pvalues['treatment']\n",
        "\n",
        "    return {\n",
        "        \"variable\": variable,\n",
        "        \"manual t-stat\": round(t_stat_manual, 4),\n",
        "        \"regression coef\": round(coef, 4),\n",
        "        \"regression t-stat\": round(t_stat_reg, 4),\n",
        "        \"p-value\": round(p_val, 4),\n",
        "        \"significant at 95%\": p_val < 0.05\n",
        "    }\n",
        "\n",
        "all_vars_to_test = [\n",
        "    'mrm2', 'years', 'female', 'couple',     # behavioral/demographic\n",
        "    'hpa', 'ltmedmra', 'freq',               # prior donation history\n",
        "    'pwhite', 'ave_hh_sz', 'median_hhincome', 'powner', 'psch_atlstba'  # ZIP-level demographics\n",
        "]\n",
        "\n",
        "results = [test_balance(var) for var in all_vars_to_test]\n",
        "\n",
        "results_df = pd.DataFrame(results)\n",
        "results_df"
      ],
      "id": "573e9d01",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "We conducted a series of balance tests on baseline covariates using both manual t-tests and linear regression. The t-tests follow the classical formula, where the difference in sample means between the treatment and control groups is scaled by the standard error of that difference. This standardization produces a t-statistic, which tells us how extreme the observed difference is under the assumption that there is no true difference.\n",
        "\n",
        "For each variable tested—such as months since last donation (mrm2), years since initial donation (years), whether the last gift was below the median (ltmedmra), and demographic variables like gender (female)—we calculated the t-statistic, the corresponding p-value, and the regression-based estimate of group differences.Across all variables, the p-values exceeded 0.05, indicating no statistically significant differences between the treatment and control groups at the 95% confidence level. This strongly suggests that the random assignment was successful, and that the groups are balanced on observed characteristics.\n",
        "\n",
        "This aligns with Table 1 in the original paper, which serves to reassure readers that the treatment effects observed later in the study can be attributed to the intervention itself, not to any pre-existing differences between groups. These balance checks are crucial in experimental work because they support the assumption that any observed differences in outcomes are causal, not confounded by selection bias or unbalanced covariates. In short, the t-test results confirm that the randomization worked as intended and that the internal validity of the study is strong.\n",
        "\n",
        "## Experimental Results\n",
        "\n",
        "### Charitable Contribution Made\n",
        "\n",
        "First, I analyze whether matched donations lead to an increased response rate of making a donation. \n"
      ],
      "id": "70fd8888"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "donation_rate = df.groupby(\"treatment\")[\"gave\"].mean().rename({0: \"Control\", 1: \"Treatment\"})\n",
        "\n",
        "plt.figure(figsize=(6, 4))\n",
        "donation_rate.plot(kind='bar', edgecolor='black')\n",
        "plt.title(\"Proportion of People Who Donated by Group\")\n",
        "plt.ylabel(\"Donation Rate\")\n",
        "plt.xticks([0, 1], ['Control', 'Treatment'], rotation=0)\n",
        "plt.ylim(0, donation_rate.max() + 0.02)\n",
        "plt.grid(axis='y', linestyle='--', alpha=0.7)\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "7406ed61",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "from scipy.stats import ttest_ind\n",
        "import statsmodels.formula.api as smf\n",
        "import pandas as pd\n",
        "\n",
        "gave_treat = df[df['treatment'] == 1]['gave']\n",
        "gave_ctrl = df[df['treatment'] == 0]['gave']\n",
        "\n",
        "t_stat, p_val = ttest_ind(gave_treat, gave_ctrl, equal_var=False)\n",
        "\n",
        "reg_gave = smf.ols('gave ~ treatment', data=df).fit()\n",
        "\n",
        "results = pd.DataFrame({\n",
        "    \"Method\": [\"T-test\", \"OLS Regression\"],\n",
        "    \"Estimate\": [None, round(reg_gave.params['treatment'], 4)],\n",
        "    \"t-statistic\": [round(t_stat, 4), round(reg_gave.tvalues['treatment'], 4)],\n",
        "    \"p-value\": [round(p_val, 4), round(reg_gave.pvalues['treatment'], 4)],\n",
        "    \"R-squared\": [None, round(reg_gave.rsquared, 4)]\n",
        "})\n",
        "\n",
        "results"
      ],
      "id": "53f56072",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "The results of both the t-test and regression show that individuals who received a matching donation offer were significantly more likely to donate than those in the control group. While the increase in donation rate is modest, the statistical evidence suggests it is unlikely due to chance. This highlights that even small behavioral nudges—like framing a donation as part of a matching gift—can meaningfully affect charitable behavior. People may perceive matched gifts as a way to increase their personal impact, which boosts their motivation to give. The findings support the idea that well-designed incentives can effectively increase donor participation.\n"
      ],
      "id": "a81ba11f"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import statsmodels.api as sm\n",
        "import pandas as pd\n",
        "\n",
        "# Run probit regression: gave ~ treatment\n",
        "probit_model = sm.Probit(df['gave'], sm.add_constant(df['treatment']))\n",
        "probit_result = probit_model.fit(disp=0)\n",
        "\n",
        "# Format result as a table\n",
        "probit_table = pd.DataFrame({\n",
        "    \"Metric\": [\n",
        "        \"Coefficient (treatment)\", \n",
        "        \"Standard Error\", \n",
        "        \"z-stat\", \n",
        "        \"p-value\", \n",
        "        \"Pseudo R-squared\", \n",
        "        \"Number of Observations\"\n",
        "    ],\n",
        "    \"Value\": [\n",
        "        round(probit_result.params['treatment'], 4),\n",
        "        round(probit_result.bse['treatment'], 4),\n",
        "        round(probit_result.tvalues['treatment'], 4),\n",
        "        round(probit_result.pvalues['treatment'], 4),\n",
        "        round(probit_result.prsquared, 4),\n",
        "        int(probit_result.nobs)\n",
        "    ]\n",
        "})\n",
        "\n",
        "probit_table"
      ],
      "id": "3cb86f9c",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "To replicate Column 1 of Table 3 in Karlan and List (2007), we estimated a probit regression where the binary outcome variable is whether an individual made a charitable donation (gave), and the explanatory variable is assignment to the treatment group (treatment).\n",
        "\n",
        "The regression output shows a statistically significant positive effect of the treatment on the probability of donating. The estimated coefficient for treatment is 0.087, with a standard error of 0.028, yielding a z-statistic of 3.11 and a p-value of 0.0019. The pseudo R-squared is 0.001, and the number of observations is 50,083—exactly matching the paper.\n",
        "\n",
        "This result reinforces the paper’s main finding: matching offers causally increase the likelihood of donating. Even though the absolute change is small, it's meaningful in the context of low baseline donation rates, and it highlights how subtle changes in framing can influence real-world giving behavior.\n",
        "\n",
        "### Differences between Match Rates\n",
        "\n",
        "Next, I assess the effectiveness of different sizes of matched donations on the response rate.\n"
      ],
      "id": "9190efab"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import pandas as pd\n",
        "from scipy.stats import ttest_ind\n",
        "\n",
        "treat_df = df[df['treatment'] == 1]\n",
        "\n",
        "gave_1to1 = treat_df[treat_df['ratio'] == 1]['gave']\n",
        "gave_2to1 = treat_df[treat_df['ratio'] == 2]['gave']\n",
        "gave_3to1 = treat_df[treat_df['ratio'] == 3]['gave']\n",
        "\n",
        "ttest_2v1 = ttest_ind(gave_2to1, gave_1to1, equal_var=False)\n",
        "ttest_3v1 = ttest_ind(gave_3to1, gave_1to1, equal_var=False)\n",
        "ttest_3v2 = ttest_ind(gave_3to1, gave_2to1, equal_var=False)\n",
        "\n",
        "t_test_results = pd.DataFrame({\n",
        "    \"Comparison\": [\"2:1 vs 1:1\", \"3:1 vs 1:1\", \"3:1 vs 2:1\"],\n",
        "    \"t-statistic\": [\n",
        "        round(ttest_2v1.statistic, 4),\n",
        "        round(ttest_3v1.statistic, 4),\n",
        "        round(ttest_3v2.statistic, 4)\n",
        "    ],\n",
        "    \"p-value\": [\n",
        "        round(ttest_2v1.pvalue, 4),\n",
        "        round(ttest_3v1.pvalue, 4),\n",
        "        round(ttest_3v2.pvalue, 4)\n",
        "    ]\n",
        "})\n",
        "\n",
        "t_test_results"
      ],
      "id": "6b0edced",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "To evaluate whether larger match ratios (2:1 or 3:1) increase the likelihood of donating compared to a 1:1 match, we conducted a series of t-tests using only individuals in the treatment group.\n",
        "\n",
        "The results showed no statistically significant differences in donation rates between:\n",
        "* 2:1 and 1:1 match groups\n",
        "* 3:1 and 1:1 match groups\n",
        "* 3:1 and 2:1 match groups\n",
        "\n",
        "These findings suggest that increasing the generosity of the match offer does not significantly affect whether people donate. This directly supports the authors’ comment in the paper (page 8), where they note that the match ratio had no additional effect on donor behavior beyond the presence of a match itself.\n"
      ],
      "id": "7666bf11"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import pandas as pd\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "treatment_df = df[df['treatment'] == 1].copy()\n",
        "\n",
        "treatment_df['ratio1'] = (treatment_df['ratio'] == 1).astype(int)\n",
        "treatment_df['ratio2'] = (treatment_df['ratio'] == 2).astype(int)\n",
        "treatment_df['ratio3'] = (treatment_df['ratio'] == 3).astype(int)\n",
        "\n",
        "reg = smf.ols('gave ~ ratio2 + ratio3', data=treatment_df).fit()\n",
        "\n",
        "ols_table = pd.DataFrame({\n",
        "    \"Variable\": reg.params.index,\n",
        "    \"Coefficient\": reg.params.round(4).values,\n",
        "    \"Std. Error\": reg.bse.round(4).values,\n",
        "    \"t-stat\": reg.tvalues.round(4).values,\n",
        "    \"p-value\": reg.pvalues.round(4).values\n",
        "})\n",
        "\n",
        "ols_table"
      ],
      "id": "127439ec",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "To assess whether higher match ratios (2:1 or 3:1) are more effective than a 1:1 match at encouraging donations, we ran a linear regression using data from individuals in the treatment group only. \n",
        "\n",
        "These results suggest that larger match ratios do not significantly increase the likelihood of giving compared to a simple 1:1 match. This supports the authors’ conclusion in the original paper: once a match is offered, making it more generous (e.g., 2:1 or 3:1) doesn’t lead to higher donation rates. From a behavioral perspective, donors may simply respond to the existence of a match rather than its size.\n"
      ],
      "id": "8fda48d2"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import pandas as pd\n",
        "import statsmodels.formula.api as smf\n",
        "\n",
        "treatment_df = df[df['treatment'] == 1].copy()\n",
        "\n",
        "treatment_df['ratio1'] = (treatment_df['ratio'] == 1).astype(int)\n",
        "treatment_df['ratio2'] = (treatment_df['ratio'] == 2).astype(int)\n",
        "treatment_df['ratio3'] = (treatment_df['ratio'] == 3).astype(int)\n",
        "\n",
        "reg = smf.ols('gave ~ ratio2 + ratio3', data=treatment_df).fit()\n",
        "\n",
        "resp_1to1 = treatment_df[treatment_df['ratio'] == 1]['gave'].mean()\n",
        "resp_2to1 = treatment_df[treatment_df['ratio'] == 2]['gave'].mean()\n",
        "resp_3to1 = treatment_df[treatment_df['ratio'] == 3]['gave'].mean()\n",
        "\n",
        "raw_diff_2v1 = resp_2to1 - resp_1to1\n",
        "raw_diff_3v2 = resp_3to1 - resp_2to1\n",
        "\n",
        "coef_2to1 = reg.params['ratio2']\n",
        "coef_3to1 = reg.params['ratio3']\n",
        "fitted_diff_2v1 = coef_2to1\n",
        "fitted_diff_3v2 = coef_3to1 - coef_2to1\n",
        "\n",
        "summary_table = pd.DataFrame({\n",
        "    \"Comparison\": [\n",
        "        \"Raw: 2:1 vs 1:1\",\n",
        "        \"Raw: 3:1 vs 2:1\",\n",
        "        \"Fitted: 2:1 vs 1:1\",\n",
        "        \"Fitted: 3:1 vs 2:1\"\n",
        "    ],\n",
        "    \"Difference\": [\n",
        "        round(raw_diff_2v1, 4),\n",
        "        round(raw_diff_3v2, 4),\n",
        "        round(fitted_diff_2v1, 4),\n",
        "        round(fitted_diff_3v2, 4)\n",
        "    ]\n",
        "})\n",
        "\n",
        "summary_table"
      ],
      "id": "7d51ff2e",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "To assess whether more generous match ratios (2:1 or 3:1) encourage higher donation response rates, we compared both the raw data and regression-based estimates for donation behavior among individuals in the treatment group.\n",
        "\n",
        "The response rate increased by only 0.19 percentage points when moving from a 1:1 to a 2:1 match. The difference between 2:1 and 3:1 match ratios was even smaller—just 0.01 percentage points.\n",
        "\n",
        "Regression results (from a model using ratio1 as the baseline) confirmed these findings. The fitted coefficient for the 2:1 group was 0.0019, and the difference between 3:1 and 2:1 was just 0.0001—both statistically insignificant.\n",
        "\n",
        "These results lead to a clear conclusion: while matched donations increase response rates overall, increasing the match ratio beyond 1:1 does not provide additional benefit. Donors appear to be motivated by the idea of matching itself, but not by the generosity of the match. This supports Karlan and List’s original finding that the existence of a match is more influential than the size of the match when it comes to motivating charitable behavior.\n",
        "\n",
        "### Size of Charitable Contribution\n",
        "\n",
        "In this subsection, I analyze the effect of the size of matched donation on the size of the charitable contribution.\n"
      ],
      "id": "d7e5e4bb"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "from scipy.stats import ttest_ind\n",
        "import statsmodels.formula.api as smf\n",
        "import pandas as pd\n",
        "\n",
        "# Limit to people who donated\n",
        "donors_df = df[df['amount'] > 0].copy()\n",
        "\n",
        "# T-test: donation amount among donors\n",
        "t_stat_donors, p_val_donors = ttest_ind(\n",
        "    donors_df[donors_df['treatment'] == 1]['amount'],\n",
        "    donors_df[donors_df['treatment'] == 0]['amount'],\n",
        "    equal_var=False\n",
        ")\n",
        "\n",
        "# Linear regression: amount ~ treatment (for donors)\n",
        "reg_donors = smf.ols('amount ~ treatment', data=donors_df).fit()\n",
        "\n",
        "# Format as summary table\n",
        "summary_donors = pd.DataFrame({\n",
        "    \"Method\": [\"T-test\", \"OLS Regression\"],\n",
        "    \"Estimate\": [None, round(reg_donors.params['treatment'], 4)],\n",
        "    \"t-statistic\": [round(t_stat_donors, 4), round(reg_donors.tvalues['treatment'], 4)],\n",
        "    \"p-value\": [round(p_val_donors, 4), round(reg_donors.pvalues['treatment'], 4)],\n",
        "    \"R-squared\": [None, round(reg_donors.rsquared, 4)]\n",
        "})\n",
        "\n",
        "summary_donors"
      ],
      "id": "c522616c",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "To evaluate whether offering a matched donation affects the size of the donation, We compared the donation amounts between the treatment and control groups using both a t-test and a linear regression.\n",
        "\n",
        "The t-test revealed a marginal difference in donation amounts, with a p-value of 0.055, slightly above the conventional 0.05 threshold for statistical significance. Similarly, the regression model estimated that donors in the treatment group gave an average of $0.15 more than those in the control group, with a p-value of 0.063.\n",
        "\n",
        "These results suggest that the matched donation treatment may have a small positive effect on how much people give, but the evidence is not strong enough to be statistically conclusive. In conclusion, while matched donations appear effective at encouraging people to donate, they do not meaningfully increase the average amount donated. Their primary value lies in boosting participation, not in raising contribution size.\n"
      ],
      "id": "4689e832"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "donors_df = df[df['amount'] > 0].copy()\n",
        "\n",
        "t_stat_donors, p_val_donors = ttest_ind(\n",
        "    donors_df[donors_df['treatment'] == 1]['amount'],\n",
        "    donors_df[donors_df['treatment'] == 0]['amount'],\n",
        "    equal_var=False\n",
        ")\n",
        "\n",
        "reg_donors = smf.ols('amount ~ treatment', data=donors_df).fit()\n",
        "\n",
        "summary_donors = pd.DataFrame({\n",
        "    \"Method\": [\"T-test\", \"OLS Regression\"],\n",
        "    \"Estimate\": [None, round(reg_donors.params['treatment'], 4)],\n",
        "    \"t-statistic\": [round(t_stat_donors, 4), round(reg_donors.tvalues['treatment'], 4)],\n",
        "    \"p-value\": [round(p_val_donors, 4), round(reg_donors.pvalues['treatment'], 4)],\n",
        "    \"R-squared\": [None, round(reg_donors.rsquared, 4)]\n",
        "})\n",
        "\n",
        "summary_donors"
      ],
      "id": "79ed8bc6",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "To analyze whether matched donations influenced how much people donated, we restricted the data to individuals who made a donation and compared donation sizes between treatment and control groups.\n",
        "\n",
        "The results of t-test, indicating no statistically significant difference in average donation amounts between the two groups. Similarly, the linear regression showed that donors in the treatment group gave $1.67 less on average, but this difference was also not statistically significant.\n",
        "\n",
        "These results suggest that while the matched donation offer increased the likelihood of giving, it did not lead to higher donations among those who gave. Moreover, because this analysis is conditional on donating—a behavior influenced by the treatment—the regression coefficient cannot be interpreted causally due to potential selection bias.\n"
      ],
      "id": "b914ba73"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "donors_df = df[df['amount'] > 0]\n",
        "\n",
        "donors_treat = donors_df[donors_df['treatment'] == 1]['amount']\n",
        "donors_ctrl = donors_df[donors_df['treatment'] == 0]['amount']\n",
        "\n",
        "mean_treat = donors_treat.mean()\n",
        "mean_ctrl = donors_ctrl.mean()\n",
        "\n",
        "fig, axes = plt.subplots(1, 2, figsize=(12, 5), sharey=True)\n",
        "\n",
        "axes[0].hist(donors_treat, bins=30, color='skyblue', edgecolor='black')\n",
        "axes[0].axvline(mean_treat, color='red', linestyle='dashed', linewidth=2)\n",
        "axes[0].set_title('Treatment Group (Donors Only)')\n",
        "axes[0].set_xlabel('Donation Amount')\n",
        "axes[0].set_ylabel('Number of Donors')\n",
        "axes[0].legend([f'Mean = ${mean_treat:.2f}'], loc='upper right')\n",
        "\n",
        "axes[1].hist(donors_ctrl, bins=30, color='lightgreen', edgecolor='black')\n",
        "axes[1].axvline(mean_ctrl, color='red', linestyle='dashed', linewidth=2)\n",
        "axes[1].set_title('Control Group (Donors Only)')\n",
        "axes[1].set_xlabel('Donation Amount')\n",
        "axes[1].legend([f'Mean = ${mean_ctrl:.2f}'], loc='upper right')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "83fe5ce3",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "The histograms show that while matched donation offers increase the likelihood of giving, they do not increase the amount donated. Both treatment and control groups exhibit similar right-skewed distributions, with the treatment group's average donation slightly lower. This confirms earlier findings that matching influences participation more than contribution size.\n",
        "\n",
        "## Simulation Experiment\n",
        "\n",
        "As a reminder of how the t-statistic \"works,\" in this section I use simulation to demonstrate the Law of Large Numbers and the Central Limit Theorem.\n",
        "\n",
        "Suppose the true distribution of respondents who do not get a charitable donation match is Bernoulli with probability p=0.018 that a donation is made. \n",
        "\n",
        "Further suppose that the true distribution of respondents who do get a charitable donation match of any size  is Bernoulli with probability p=0.022 that a donation is made.\n",
        "\n",
        "\n",
        "### Law of Large Numbers\n"
      ],
      "id": "1c02d922"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Set random seed for reproducibility\n",
        "np.random.seed(42)\n",
        "\n",
        "control_draws = np.random.binomial(1, 0.018, 100000)\n",
        "\n",
        "treatment_draws = np.random.binomial(1, 0.022, 10000)\n",
        "\n",
        "control_sample = control_draws[:10000]\n",
        "\n",
        "differences = treatment_draws - control_sample\n",
        "\n",
        "cumulative_avg = np.cumsum(differences) / np.arange(1, len(differences) + 1)\n",
        "\n",
        "plt.figure(figsize=(10, 5))\n",
        "plt.plot(cumulative_avg, label='Cumulative Average (Treatment - Control)', color='blue')\n",
        "plt.axhline(y=0.004, color='red', linestyle='--', label='True Mean Difference (0.004)')\n",
        "plt.title(\"Cumulative Average of Simulated Differences (Law of Large Numbers)\")\n",
        "plt.xlabel(\"Number of Observations\")\n",
        "plt.ylabel(\"Cumulative Average Difference\")\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "ce21a613",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "This simulation demonstrates the Law of Large Numbers by plotting the cumulative average of 10,000 differences in donation outcomes between simulated treatment and control groups. The treatment group has a true donation probability of 2.2%, while the control group has 1.8%, implying a true difference of 0.004. Although the early cumulative averages fluctuate due to random variation, the plot clearly shows that the average stabilizes and converges toward the true difference as the number of observations increases. This visual evidence reinforces the statistical principle that, with large enough sample sizes, sample averages become reliable estimates of population parameters.\n",
        "\n",
        "### Central Limit Theorem\n"
      ],
      "id": "c3f01c7d"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "np.random.seed(42)\n",
        "\n",
        "control_p = 0.018\n",
        "treat_p = 0.022\n",
        "sample_sizes = [50, 200, 500, 1000]\n",
        "num_simulations = 1000\n",
        "\n",
        "fig, axes = plt.subplots(2, 2, figsize=(14, 10))\n",
        "axes = axes.flatten()\n",
        "\n",
        "for i, n in enumerate(sample_sizes):\n",
        "    differences = []\n",
        "    for _ in range(num_simulations):\n",
        "        control_sample = np.random.binomial(1, control_p, n)\n",
        "        treatment_sample = np.random.binomial(1, treat_p, n)\n",
        "        diff = treatment_sample.mean() - control_sample.mean()\n",
        "        differences.append(diff)\n",
        "\n",
        "    ax = axes[i]\n",
        "    ax.hist(differences, bins=30, color='skyblue', edgecolor='black')\n",
        "    ax.axvline(x=0, color='red', linestyle='--', linewidth=2, label='Zero')\n",
        "    ax.axvline(x=0.004, color='green', linestyle='--', linewidth=2, label='True Diff')\n",
        "    ax.set_title(f'Sample Size = {n}')\n",
        "    ax.set_xlabel('Avg. Difference (Treatment - Control)')\n",
        "    ax.set_ylabel('Frequency')\n",
        "    ax.legend()\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "3a40a556",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "This simulation illustrates how sample size affects the distribution of estimated treatment effects. For each of four sample sizes (50, 200, 500, and 1000), we repeatedly drew samples from control and treatment groups and calculated the average difference in donation rates. At small sample sizes, the distributions are wide and irregular, with zero often appearing near the center—suggesting high variability and low power to detect small effects. As the sample size increases, the distributions become narrower and more centered around the true effect (0.004), and zero shifts toward the tail. This confirms the Central Limit Theorem and underscores the importance of large samples.\n"
      ],
      "id": "66a7f1c7"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}